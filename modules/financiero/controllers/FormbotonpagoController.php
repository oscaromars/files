<?php

namespace app\controllers;

use Yii;
use app\models\OrdenPago;
use app\models\SolicitudInscripcion;
use app\models\Persona;
use app\models\Utilities;
use yii\helpers\ArrayHelper;
// use app\models\vpos_plugin; //no se encuentra modelo
use yii\helpers\Url;
use yii\helpers\Html;

class FormbotonpagoController extends \yii\web\Controller {

    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
        $this->layout = '@themes/' . \Yii::$app->getView()->theme->themeName . '/layouts/basic.php';
    }

    public function actionBotonpago() {
        return $this->render('btnpago'
        );
    }

    public function actionBtnpago() {
        $opag_id = base64_decode($_GET["ord_pago"]); 
        $con = \Yii::$app->db_facturacion;
        $transaction = $con->beginTransaction();
        try {
            $mod_opago = new OrdenPago();
            $resp_veropago = $mod_opago->consultarSolicitxOrd($opag_id); // no se cae
            if ($resp_veropago) {
                $resp_opago = $mod_opago->datosBotonpago($opag_id, 1); // no se cae
                if ($resp_opago) {
                    $resp_instrans = $mod_opago->insertarTransaccionbtnpago($opag_id); // no se cae pero solo guarda la oden de pago id
                    if ($resp_instrans) {
                        $transaction->commit();
                        return $this->render('btnpago', ['identificacion' => $resp_opago["identificacion"],
                                    'nombres' => $resp_opago["nombres"],
                                    'apellidos' => $resp_opago["apellidos"],
                                    'precio' => $resp_opago["precio"],
                                    'curso' => $resp_opago["curso"],
                                    'email' => $resp_opago["email"],
                                    'domicilio' => $resp_opago["domicilio"],
                                    'cli_id' => $resp_opago["cli_id"],
                                    'opag_id' => $opag_id,
                                    'subtotal' => $resp_opago["opag_subtotal"],
                                    'iva' => $resp_opago["opag_iva"],
                                    'transaccion' => $resp_instrans,
                                    'solicitud' => $resp_opago["solicitud"],                                    
                        ]);
                    } else {
                        $transaction->rollback();
                    }
                } else {
                    $mensaje = "Error al obtener datos de la orden de pago.";
                    $transaction->rollback();
                    return $this->render('respuesta', ['mensaje' => $mensaje,
                    ]);
                }
            } else {
                $mensaje = "Orden de Pago se encuentra pagada.";
                $transaction->rollback();
                return $this->render('respuesta', ['mensaje' => $mensaje,
                ]);
            }
        } catch (Exception $ex) {
            $transaction->rollback();
        }
    }

    public function actionRespuesta() {
        \app\models\Utilities::putMessageLogFile('entrooo a RESPUESTA');
        \app\models\Utilities::putMessageLogFile('Entrada por POST :' . $_POST['IDACQUIRER']);
        \app\models\Utilities::putMessageLogFile('Entrada por GET :' . $_GET['IDACQUIRER']);
        require(__DIR__ . '/../components/vpos_plugin.php');
        //Componentes de Seguridad
        //Vector Hexadecimalgit add 
        $vector = Yii::$app->params["Vposvector"];
        //Llave Firma Publica de Alignet
        $llaveVPOSFirmaPub = Yii::$app->params["VposllaveVPOSFirmaPub"];

        //Llave Crypto Privada del Comercio
        $llaveComercioCryptoPriv = Yii::$app->params["VposllaveComercioCryptoPriv"];

        //Parámetros de Recepción de Autorización
        $arrayIn['IDACQUIRER'] = $_POST['IDACQUIRER'];
        $arrayIn['IDCOMMERCE'] = $_POST['IDCOMMERCE'];
        $arrayIn['XMLRES'] = $_POST['XMLRES'];
        $arrayIn['DIGITALSIGN'] = $_POST['DIGITALSIGN'];
        $arrayIn['SESSIONKEY'] = $_POST['SESSIONKEY'];
        $arrayOut = '';

        //Ejecución de Creación de Valores para la Solicitud de Interpretación de la Respuesta.
        if (VPOSResponse($arrayIn, $arrayOut, $llaveVPOSFirmaPub, $llaveComercioCryptoPriv, $vector)) {
            /* $arrayOut['authorizationResult'] = "00"; //BORRAR DESPUES.
              $arrayOut['purchaseOperationNumber'] = 2; //BORRAR DESPUES.
              $arrayOut['purchaseAmount'] = 90;
              $arrayOut['billingEMail'] = 'etuti45@hotmail.com';
              $arrayOut['billingFirstName'] = 'Isaac';
              $arrayOut['billingLastName'] = 'Tutivén'; */
            //BORRAR DESPUES.

            $resultadobtn = $arrayOut['authorizationResult'];
            $codautorizacion = $arrayOut['authorizationCode'];
            $coderror = $arrayOut['errorCode'];
            $mensaje = $arrayOut['errorMessage'];
            $numero_transaccion = $arrayOut['purchaseOperationNumber'];

            $estado_revision = "AP";
            $observacion = "Pago realizado por Botón de Pago.";
            $banderacrea = "1";
            $dcar_estado_revisa = 'RE';
            $opag_estado_pagado = 'S';
            $fpag_id = 6;
            $tbpa_num_tarjeta = "";

            // grabar en base de datos
            $con = \Yii::$app->db_facturacion;
            $transaction = $con->beginTransaction();
            $con2 = \Yii::$app->db_captacion;
            $transaction2 = $con2->beginTransaction();
            $con3 = \Yii::$app->db_academico;
            $transaction3 = $con3->beginTransaction();

            \app\models\Utilities::putMessageLogFile('resultado:' . $resultadobtn);
            if ($arrayOut['authorizationResult'] == "00") {
                //$NumeroTarjeta = $arrayOut['cardNumber'];            
                $Monto = $arrayOut['purchaseAmount'];
                $Correo = $arrayOut['billingEMail'];
                $Nombre = $arrayOut['billingFirstName'];
                $Apellido = $arrayOut['billingLastName'];
                $Precio1 = floatval($arrayOut['purchaseAmount']);
                $Precio = $arrayOut['reserved1'];
                $NombreItem = $arrayOut['reserved2'];

                try {
                    $mod_ordpago = new OrdenPago();
                    //Pago por botón de pago.                                        
                    //Se buscan los demás datos necesarios para grabar el pago realizado
                    $respdatos = $mod_ordpago->consultarTransacxId($numero_transaccion); // no se cae
                    $sins_id = $respdatos['sins_id'];
                    $per_nombres = $respdatos['nombres'];
                    $per_correo = $respdatos['per_correo'];
                    $item = $respdatos['item'];
                    $per_id = $respdatos['per_id'];
                    $estado_opg = $respdatos['opag_estado_pago'];
                    $opag_id = $respdatos['orden'];
                    $ccar_total = $respdatos['opag_total'];
                    $dcar_valor = $respdatos['opag_total'];
                    $fecha_transaccion = date(Yii::$app->params["dateTimeByDefault"]);
                    $int_id = $respdatos['int_id'];

                    $mod_persona = new Persona();
                    $resp_persona = $mod_persona->consultaPersonaId($per_id);
                    $correo = $resp_persona["usu_user"];
                    $apellidos = $resp_persona["per_pri_apellido"];
                    $nombres = $resp_persona["per_pri_nombre"];
                    //Se obtienen el método de ingreso y el nivel de interés según la solicitud.
                    $mod_sol = new SolicitudInscripcion();
                    $resp_sol = $mod_sol->Obtenerdatosolicitud($sins_id); // no se cae

                    $link = "http://www.uteg.edu.ec";
                    $metodo_ingreso = $resp_sol["nombre_metodo_ingreso"];
                    if ($resp_sol["metodo_ingreso"] == 1) {
                        $leyenda = "el curso de nivelación";
                    }
                    if ($resp_sol["metodo_ingreso"] == 2) {
                        $leyenda = "la preparación para el examen de admisión";
                    }
                    //Se obtiene el curso para luego registrarlo.                                                                                                 
                    if (($respdatos) and ( $estado_opg == 'P')) {
                        //envío de correo con transacción exitosa en banco.                                            
                        $file1 = Url::base(true) . "/files/Bienvenida.pdf";
                        $rutaFile = array($file1);
                        $tituloMensaje = Yii::t("interesado", "UTEG - Registration Online");
                        $asunto = Yii::t("interesado", "UTEG - Registration Online");
                        $body = Utilities::getMailMessage("Applicantrecord", array("[[nombre]]" => $nombres, "[[apellido]]" => $apellidos, "[[metodo]]" => $metodo_ingreso, /* "[[fecha]]" => $resp_curso['fecha'], */ "[[leyenda]]" => $leyenda, "[[link]]" => $link), Yii::$app->language);
                        Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [$correo => $apellidos . " " . $nombres], $asunto, $body, $rutaFile);
                        Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [Yii::$app->params["soporteEmail"] => "Soporte"], $asunto, $body);

                        $tituloMensajePago = Yii::t("interesado", "UTEG - Registration Online");
                        $asuntoPago = Yii::t("interesado", "UTEG - Payment Made");
                        $bodyPago = Utilities::getMailMessage("Paymentmade", array("[[nombre]]" => $per_nombres, "[[item]]" => $item, "[[monto]]" => $ccar_total, "[[codautorizacion]]" => $codautorizacion, "[[resultadoAuto]]" => $resultadobtn), Yii::$app->language);
                        Utilities::sendEmail($tituloMensajePago, Yii::$app->params["adminEmail"], [$per_correo => $per_nombres], $asuntoPago, $bodyPago);
                        Utilities::sendEmail($tituloMensajePago, Yii::$app->params["adminEmail"], [Yii::$app->params["soporteEmail"] => "Soporte"], $asuntoPago, $bodyPago);

                        //Se registran todos los datos de la transacción enviada por el banco.  NO  SE CAE                      
                        $respinsert = $mod_ordpago->actualizaTransaccionbtnpago($numero_transaccion, $tbpa_num_tarjeta, $codautorizacion, $resultadobtn, $coderror, $mensaje);
                        if ($respinsert) {
                            //Insertar en tabla info_carga_prepago
                            $fecha_registro = date(Yii::$app->params["dateTimeByDefault"]);
                            $creadetalle = $mod_ordpago->insertarCargaPrepago($opag_id, $fpag_id, $dcar_valor, null, 'PE', null, null, $numero_transaccion, $fecha_transaccion, $fecha_registro);  //NO SE CAE                
                            $idd = $creadetalle;
                        }
                        //Obtener datos grabados en tablas temporales                        
                        $resp_cargo = $mod_ordpago->consultarCargo($idd, $opag_id); // NO SE CAE
                        if ($resp_cargo['existe'] == 'S') {
                            $valor_det = $resp_cargo['valor'];
                            $fpag_id = $resp_cargo['fpag_id'];
                            $fechapago = $resp_cargo['fechapago'];
                            $imagen = $resp_cargo['imagen'];
                            $valortotal = $resp_cargo['valortotal'];
                            $fechapagtotal = $resp_cargo['fechapagotot'];
                            $ccar_id = $resp_cargo['id'];
                            $valorpagado = $resp_cargo['valorpagado'];
                            $num_transaccion = $resp_cargo['icpr_num_transaccion'];
                            $fecha_transaccion = $resp_cargo['icpr_fecha_transaccion'];
                            $total_pagado = $resp_cargo['total_pagado'];

                            if ($banderacrea == 1) {
                                $creg_total = $valortotal;
                                $creg_resultado = 'OK';
                                $creg_fecha_pago_total = $fechapagtotal;
                                $creg_pagado = $total_pagado + $valor_det;

                                if ($valortotal > $creg_pagado) {
                                    $creg_estado_pago = 'NP'; //Pago Revisado                           
                                } else {
                                    $creg_estado_pago = 'SP'; //Pago Realizado en su totalidad.                          
                                }

                                //Obtención de las cuotas pendientes de pago.
                                $resp_desglose = $mod_ordpago->obtenerDesglosepagopend($opag_id); // NO SE CAE
                                if ($resp_desglose) {
                                    $usuario_aprueba = 1;
                                    for ($i = 0; $i < count($resp_desglose); $i++) {
                                        $valor_sobra = $valor_det;
                                        if (($resp_desglose[$i]['valor_desglose'] <= $valor_sobra) and ( $valor_sobra > 0)) {
                                            $valor = ($resp_desglose[$i]['valor_desglose']);
                                            $valor_sobra = $valor_sobra - $valor;
                                        } else {
                                            $valor = $valor_sobra;
                                        }
                                        $fechapago = date(Yii::$app->params["dateTimeByDefault"]);
                                        $resp_inspago = $mod_ordpago->insertarRegistroPago($resp_desglose[$i]['id'], $fpag_id, $valor, $fechapago, $imagen, $num_transaccion, $fecha_transaccion, $observacion, $estado_revision, $usuario_aprueba, $dcar_estado_revisa); // NO SE CAE                                                      
                                        if ($resp_inspago) {
                                            if ($resp_desglose[$i]['valor_desglose'] = $valor_det) {
                                                $resp_actcabcar = $mod_ordpago->actualizaDesglosepago($resp_desglose[$i]['id'], 'S', $usuario_aprueba); // NO SE CAE                                    
                                            }
                                        }
                                    }
                                    //actualizar en detalle_cargo la gestión realizada.                                                                                    
                                    $resp_actcar = $mod_ordpago->actualizaDetallecargo($idd, $dcar_estado_revisa, $estado_revision, $observacion, $usuario_aprueba, $valor_det);   // NO SE CAE                         
                                    if ($resp_actcar) {
                                        $totalpagado = ($valorpagado + $valor_det);
                                        if ($creg_estado_pago == 'SP') {
                                            $ccar_estado_pagado = 'S';
                                            $opag_estado_pagado = 'S';
                                            $fecha_pago_total = date(Yii::$app->params["dateTimeByDefault"]);
                                        } else {
                                            $ccar_estado_pagado = 'P';
                                        }
                                        //actualiza datos de la orden de pago.                                         
                                        $resp_opag = $mod_ordpago->actualizaOrdenpago($opag_id, $opag_estado_pagado, $creg_pagado, $fecha_pago_total, $usuario_aprueba);  // NO SE CAE                                      
                                        if ($resp_opag) {
                                            if ($creg_estado_pago == 'SP') {
                                                $resp_encuentra = $mod_ordpago->encuentraAdmitido($int_id,$sins_id); // NO SE CAE
                                                if ($resp_encuentra) {
                                                    $asp = $resp_encuentra['asp_id'];
                                                    $continua = 1;
                                                } else {
                                                    //Se asigna al interesado como aspirante
                                                    $resp_asp = $mod_ordpago->insertarAdmitido($int_id,$sins_id); //NO SE CAE
                                                    if ($resp_asp) {
                                                        $asp = $resp_asp;
                                                        $resp_inte = $mod_ordpago->actualizaEstadointeresado($int_id,$usuario_aprueba); // NO SE CAE
                                                        if ($resp_inte) {
                                                            $continua = 1;
                                                        }
                                                    }
                                                }
                                                if ($continua == 1) {
                                                    //Se obtienen el método de ingreso y el nivel de interés según la solicitud.
                                                    $mod_sol = new SolicitudInscripcion();
                                                    $resp_sol = $mod_sol->Obtenerdatosolicitud($sins_id); // NO SE CAE
                                                    //Se obtiene el curso para luego registrarlo.
                                                    if ($resp_sol) {                                                       
                                                        //envio de correo                                                                    
                                                        $mod_persona = new Persona();
                                                        $resp_persona = $mod_persona->consultaPersonaId($per_id); // NO SE CAE
                                                        $correo = $resp_persona["usu_user"];
                                                        $apellidos = $resp_persona["per_pri_apellido"];
                                                        $nombres = $resp_persona["per_pri_nombre"];

                                                        //información del aspirante
                                                        $identi = $resp_persona["per_cedula"];
                                                        $cel_fono = $resp_persona["per_celular"];
                                                        $mail_asp = $resp_persona["per_correo"];

                                                        $link = "http://www.uteg.edu.ec"; //Url::base(true) . "/formservicio/pago?ord_pago=" . base64_encode($resp_opago);
                                                        $metodo_ingreso = $resp_sol["nombre_metodo_ingreso"];
                                                        if ($resp_sol["metodo_ingreso"] == 1) {
                                                            $leyenda = "el curso de nivelación";
                                                        }
                                                        if ($resp_sol["metodo_ingreso"] == 2) {
                                                            $leyenda = "la preparación para el examen de admisión";
                                                        }
                                                        $file1 = Url::base(true) . "/files/Bienvenida.pdf";
                                                        $rutaFile = array($file1);
                                                        $tituloMensaje = Yii::t("interesado", "UTEG - Registration Online");
                                                        $asunto = Yii::t("interesado", "UTEG - Registration Online");
                                                        $body = Utilities::getMailMessage("Applicantrecord", array("[[nombre]]" => $nombres, "[[apellido]]" => $apellidos, "[[metodo]]" => $metodo_ingreso, /* "[[fecha]]" => $resp_curso['fecha'], */ "[[leyenda]]" => $leyenda, "[[link]]" => $link), Yii::$app->language);
                                                        Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [$correo => $apellidos . " " . $nombres], $asunto, $body, $rutaFile);
                                                        Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [Yii::$app->params["soporteEmail"] => "Soporte"], $asunto, $body);
                                                        // envio de correo a colecturia de la informacion del aspirante
                                                        $asuntos = Yii::t("interesado", "UTEG - Information Candidate");
                                                        $bodies = Utilities::getMailMessage("candidateinfo", array("[[nombre]]" => $nombres, "[[apellido]]" => $apellidos, "[[numero_dni]]" => $identi, "[[celular]]" => $cel_fono, "[[mail]]" => $mail_asp), Yii::$app->language);
                                                        Utilities::sendEmail($asuntos, Yii::$app->params["adminEmail"], [Yii::$app->params["colecturia"] => "Colecturia"], $asuntos, $bodies);

                                                        $exito = 1;
                                                        // }
                                                        //}
                                                    }
                                                }
                                            }
                                        } else {
                                            $exito = 1;
                                        }
                                    } //fin de actualizar detalle cargo
                                } //fin de obtener registros de desglose
                            } //fin  $banderacrea
                            // } // fin crea detalle del pago.
                        }  //fin cuando aprueba el pago. 
                        else { //En el caso cuando no aprueba el pago.
                            //actualizar en detalle_cargo la gestión realizada                                                                            
                            $resp_actdetcar = $mod_ordpago->actualizaDetallecargo($idd, $dcar_estado_revisa, $estado_revision, $observacion, $usuario_aprueba, $valor_det); // NO SE CAE
                            if ($resp_actdetcar) {
                                $exito = 1;
                            }
                        }
                    } else {
                        $bandera = 0;
                        $mensaje = "Solicitud no está Pendiente de Pago o Transacción generada para el banco No Existe.";
                        $message = array(
                            "wtmessage" => Yii::t("notificaciones", "Solicitud no está Pendiente de Pago o Transacción generada para el banco No Existe."),
                            "title" => Yii::t('jslang', 'Success'),
                        );
                    }
                    if ($exito) {
                        $bandera = 1;
                        $transaction->commit();
                        $transaction2->commit();
                        $transaction3->commit();
                        $message = array(
                            "wtmessage" => Yii::t("notificaciones", "El pago ha sido grabado. "),
                            "estado_opg" => "S",
                            "title" => Yii::t('jslang', 'Success'),
                        );
                        //echo Utilities::ajaxResponse('OK', 'alert', Yii::t("jslang", "Sucess"), false, $message);
                    } else {
                        $bandera = 0;
                        $transaction->rollback();
                        $transaction2->rollback();
                        $transaction3->rollback();
                        if (empty($message)) {
                            $message = array(
                                "wtmessage" => Yii::t("notificaciones", "Error al grabar el pago"),
                                "title" => Yii::t('jslang', 'Success'),
                            );
                            $mensaje = "Error al grabar el pago. Consulte con Administrador de Sistemas.";
                        }
                        //echo Utilities::ajaxResponse('NO_OK', 'alert', Yii::t("jslang", "Sucess"), false, $message);
                    }
                } catch (Exception $ex) {
                    $transaction->rollback();
                    $transaction2->rollback();
                    $transaction3->rollback();
                    $bandera = 0;
                    $mensaje = "Error al grabar el pago. Consulte con Administrador de Sistemas.";
                    $message = array(
                        "wtmessage" => Yii::t("notificaciones", "Error al grabar el pago."),
                        "title" => Yii::t('jslang', 'Success'),
                    );
                    //echo Utilities::ajaxResponse('NO_OK', 'alert', Yii::t("jslang", "Sucess"), false, $message);
                }
            } else {  //cuando retorna error el servicio web.                                      
                $mod_ordpago = new OrdenPago();
                $respdatos = $mod_ordpago->consultarTransacxId($numero_transaccion); // NO SE CAE
                if ($respdatos) {
                    $per_nombres = $respdatos['nombres'];
                    $per_correo = $respdatos['per_correo'];
                    //Se envía correo al usuario.
                    switch ($resultadobtn) {
                        case "01":
                            //pago denegado
                            $bandera = 2;
                            $mensaje = "Su pago ha sido Negado por favor comunicarse con su proveedor de tarjeta de crédito.";
                            $tituloMensaje = Yii::t("interesado", "UTEG - Registration Online");
                            $asunto = Yii::t("interesado", "UTEG - Payment Denied");
                            $body = Utilities::getMailMessage("Paymentdenied", array("[[nombre]]" => $per_nombres), Yii::$app->language);
                            Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [$per_correo => $per_nombres], $asunto, $body);
                            Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [Yii::$app->params["soporteEmail"] => "Soporte"], $asunto, $body);
                            break;
                        default :
                            //pago rechazado
                            $bandera = 3;
                            $mensaje = "Su pago ha sido Rechazado por favor comunicarse con su proveedor de tarjeta de crédito.";
                            $tituloMensaje = Yii::t("interesado", "UTEG - Registration Online");
                            $asunto = Yii::t("interesado", "UTEG - Rejected Payment");
                            $body = Utilities::getMailMessage("Paymentrejected", array("[[nombre]]" => $per_nombres), Yii::$app->language);
                            Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [$per_correo => $per_nombres], $asunto, $body);
                            Utilities::sendEmail($tituloMensaje, Yii::$app->params["adminEmail"], [Yii::$app->params["soporteEmail"] => "Soporte"], $asunto, $body);
                            break;
                    }
                    //Grabar lo enviado por el banco. 
                    $respinsert1 = $mod_ordpago->actualizaTransaccionbtnpago($numero_transaccion, $tbpa_num_tarjeta, $codautorizacion, $resultadobtn, $coderror, $mensaje);
                    if ($respinsert1) {
                        $transaction->commit();
                        $message = array(
                            "wtmessage" => Yii::t("notificaciones", "Información del banco ha sido grabada. Revise su correo."),
                            "title" => Yii::t('jslang', 'Success'),
                        );
                        //echo Utilities::ajaxResponse('OK', 'alert', Yii::t("jslang", "Sucess"), false, $message);
                    } else {
                        $transaction->rollback();
                        $message = array(
                            "wtmessage" => Yii::t("notificaciones", "Error al grabar respuesta del banco."),
                            "title" => Yii::t('jslang', 'Success'),
                        );
                        // echo Utilities::ajaxResponse('NO_OK', 'alert', Yii::t("jslang", "Sucess"), false, $message);
                    }
                }
            }
        } else {
            $bandera = 4;
            $mensaje = "Hubo un problema de conexión favor vuelva a intentarlo.";
        }

        return $this->render('respuesta', ['mensaje' => $mensaje,
                    'bandera' => $bandera,
                    'metodo' => $metodo_ingreso,
                    'leyenda' => $leyenda,
                    'fecha' => $fecha,
                    'link' => $link,]
        );
    }

}
